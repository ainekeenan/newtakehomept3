{"ast":null,"code":"var _jsxFileName = \"/Users/ainekeenan/AggieWorks/take-home/trial/animals/src/pages/apitest.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ApiTest = ({\n  amountvar\n}) => {\n  _s();\n  const [papi, setPublic] = useState(\"\");\n  const [info, setInfo] = useState({\n    catfacts: \"0\"\n  });\n  useEffect(() => {\n    //fetch(\"https://cat-fact.herokuapp.com/facts\")\n    //const url = `https://cat-fact.herokuapp.com/facts/random?amount=${amount}`;\n\n    fetch(`http://localhost:9000/publicAPI?amount=${amountvar}`).then(response => response.json()).then(json => {\n      setPublic(json);\n    }).catch(error => console.error(error));\n  }, [info]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\" Amount of Cat Facts: \", /*#__PURE__*/_jsxDEV(\"input\", {\n        value: info.catfacts,\n        onChange: e => setInfo({\n          ...info,\n          catfacts: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 42\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this), papi ? /*#__PURE__*/_jsxDEV(\"pre\", {\n      children: JSON.stringify(papi, null, 2)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 21\n    }, this) : \"Loading...\", /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"fine\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: amountvar\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Hello\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 9\n  }, this);\n};\n_s(ApiTest, \"sTHMYKkeMauQb7Ppq8DUFt4L8u4=\");\n_c = ApiTest;\nexport default ApiTest;\nvar _c;\n$RefreshReg$(_c, \"ApiTest\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","ApiTest","amountvar","_s","papi","setPublic","info","setInfo","catfacts","fetch","then","response","json","catch","error","console","children","value","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","JSON","stringify","_c","$RefreshReg$"],"sources":["/Users/ainekeenan/AggieWorks/take-home/trial/animals/src/pages/apitest.js"],"sourcesContent":["import React from \"react\";\nimport { useState, useEffect } from \"react\";\n\nconst ApiTest = ({amountvar}) => {\n      \n\n  const [papi, setPublic] = useState(\"\");\n  const [info, setInfo] = useState({catfacts: \"0\"});\n\n  useEffect(() => {\n    //fetch(\"https://cat-fact.herokuapp.com/facts\")\n    //const url = `https://cat-fact.herokuapp.com/facts/random?amount=${amount}`;\n    \n    fetch(`http://localhost:9000/publicAPI?amount=${amountvar}`)\n      .then(response => response.json())\n      .then(json => {setPublic(json)})\n      .catch(error => console.error(error));\n      }, [info]\n      );\n      return (\n        <div>\n            <label> Amount of Cat Facts: <input value= {info.catfacts} onChange={e => setInfo({...info, catfacts: e.target.value })} /> </label> \n            {papi ? <pre>{JSON.stringify(papi, null, 2)}</pre> : \"Loading...\"}\n            <p>fine</p>\n            <p>{amountvar}</p>\n            <p>Hello</p>\n             </div>\n      );\n\n};\n\nexport default ApiTest;"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,MAAMC,OAAO,GAAGA,CAAC;EAACC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAG/B,MAAM,CAACC,IAAI,EAAEC,SAAS,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACS,IAAI,EAAEC,OAAO,CAAC,GAAGV,QAAQ,CAAC;IAACW,QAAQ,EAAE;EAAG,CAAC,CAAC;EAEjDV,SAAS,CAAC,MAAM;IACd;IACA;;IAEAW,KAAK,CAAE,0CAAyCP,SAAU,EAAC,CAAC,CACzDQ,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACE,IAAI,IAAI;MAACP,SAAS,CAACO,IAAI,CAAC;IAAA,CAAC,CAAC,CAC/BC,KAAK,CAACC,KAAK,IAAIC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC,CAAC;EACrC,CAAC,EAAE,CAACR,IAAI,CACR,CAAC;EACD,oBACEN,OAAA;IAAAgB,QAAA,gBACIhB,OAAA;MAAAgB,QAAA,GAAO,wBAAsB,eAAAhB,OAAA;QAAOiB,KAAK,EAAGX,IAAI,CAACE,QAAS;QAACU,QAAQ,EAAEC,CAAC,IAAIZ,OAAO,CAAC;UAAC,GAAGD,IAAI;UAAEE,QAAQ,EAAEW,CAAC,CAACC,MAAM,CAACH;QAAM,CAAC;MAAE;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,KAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC,EACnIpB,IAAI,gBAAGJ,OAAA;MAAAgB,QAAA,EAAMS,IAAI,CAACC,SAAS,CAACtB,IAAI,EAAE,IAAI,EAAE,CAAC;IAAC;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,GAAG,YAAY,eACjExB,OAAA;MAAAgB,QAAA,EAAG;IAAI;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,eACXxB,OAAA;MAAAgB,QAAA,EAAId;IAAS;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAClBxB,OAAA;MAAAgB,QAAA,EAAG;IAAK;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAGnB,CAAC;AAACrB,EAAA,CA1BIF,OAAO;AAAA0B,EAAA,GAAP1B,OAAO;AA4Bb,eAAeA,OAAO;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}